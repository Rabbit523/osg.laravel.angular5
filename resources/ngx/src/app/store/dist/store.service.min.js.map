{"version":3,"sources":["store.service.ts"],"names":["core_1","require","rxjs_1","exports","DBKEYS","THEME","TOKEN","StoreService","this","localdb","window","localStorage","calendarFlagSubject","Subject","calendarFlagObservable$","asObservable","graphDataFlagSubject","graphDataFlagObservable$","subject","BehaviorSubject","cur_calendar_id","calendar_workout_logs","required_preinterview","required_postinterview","graph_data","state$","Object","defineProperty","prototype","getValue","val","next","setCalendarFlag","setGraphDataFlag","setCalendarWorkoutLogs","console","log","store","__assign","getCalendarWorkoutLogs","setRequiredPreinterview","getRequiredPreinterview","setRequiredPostinterview","getRequiredPostinterview","setCurCalendarId","id","getCurCalendarId","setGraphData","data","getGraphData","__decorate","Injectable","providedIn"],"mappings":"+nBAAA,IAAAA,OAAAC,QAAA,iBACAC,OAAAD,QAAA,QAEaE,QAAAC,OAAS,CAACC,MAAO,iBAAkBC,MAAO,kBAoBvD,IAAAC,aAAA,WAkCE,SAAAA,IAhCQC,KAAAC,QAAmBC,OAAOC,aAkB1BH,KAAAI,oBAAsB,IAAIV,OAAAW,QAClCL,KAAAM,wBAA0BN,KAAKI,oBAAoBG,eAM3CP,KAAAQ,qBAAuB,IAAId,OAAAW,QACnCL,KAAAS,yBAA2BT,KAAKQ,qBAAqBD,eASnDP,KAAKU,QAAU,IAAIhB,OAAAiB,gBAA0B,CAC3CC,gBAAiB,KACjBC,sBAAuB,KACvBC,uBAAuB,EACvBC,wBAAwB,EACxBC,WAAY,OAEdhB,KAAKiB,OAASjB,KAAKU,QAAQH,eAsC/B,OAvEEW,OAAAC,eAAYpB,EAAAqB,UAAA,QAAK,KAAjB,WACE,OAAOpB,KAAKU,QAAQW,gBAItB,SAAkBC,GAChBtB,KAAKU,QAAQa,KAAKD,oCAMbvB,EAAAqB,UAAAI,gBAAP,WACExB,KAAKI,oBAAoBmB,QAMpBxB,EAAAqB,UAAAK,iBAAP,WACEzB,KAAKQ,qBAAqBe,QAgBrBxB,EAAAqB,UAAAM,uBAAP,SAA8Bb,GAC5Bc,QAAQC,IAAI,kCAAmCf,GAC/Cb,KAAK6B,MAAKC,SAAAA,SAAA,GAAQ9B,KAAK6B,OAAK,CAAEhB,sBAAuBA,KAEhDd,EAAAqB,UAAAW,uBAAP,WACE,OAAO/B,KAAK6B,MAAMhB,uBAGbd,EAAAqB,UAAAY,wBAAP,SAA+BlB,GAC7Bd,KAAK6B,MAAKC,SAAAA,SAAA,GAAQ9B,KAAK6B,OAAK,CAAEf,sBAAuBA,KAEhDf,EAAAqB,UAAAa,wBAAP,WACE,OAAOjC,KAAK6B,MAAMf,uBAGbf,EAAAqB,UAAAc,yBAAP,SAAgCnB,GAC9Bf,KAAK6B,MAAKC,SAAAA,SAAA,GAAQ9B,KAAK6B,OAAK,CAAEd,uBAAwBA,KAEjDhB,EAAAqB,UAAAe,yBAAP,WACE,OAAOnC,KAAK6B,MAAMd,wBAGbhB,EAAAqB,UAAAgB,iBAAP,SAAwBC,GACtBrC,KAAK6B,MAAKC,SAAAA,SAAA,GAAQ9B,KAAK6B,OAAK,CAAEjB,gBAAiByB,KAE1CtC,EAAAqB,UAAAkB,iBAAP,WACE,OAAOtC,KAAK6B,MAAMjB,iBAGbb,EAAAqB,UAAAmB,aAAP,SAAoBC,GAClBxC,KAAK6B,MAAKC,SAAAA,SAAA,GAAQ9B,KAAK6B,OAAK,CAAEb,WAAYwB,KAErCzC,EAAAqB,UAAAqB,aAAP,WACE,OAAOzC,KAAK6B,MAAMb,YAhFTjB,EAAY2C,WAAA,CAJxBlD,OAAAmD,WAAW,CACVC,WAAY,UAGD7C,GAAb,GAAaJ,QAAAI,aAAAA","file":"store.service.min.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\n\nexport const DBKEYS = {THEME: 'tYp95ymECHOESt', TOKEN: 'tYp95ymECHOESk'};\n\nexport interface IFilter {\n  dateMode: string;\n  startDate: string;\n  endDate: string;\n}\n\nexport interface AppState {\n  cur_calendar_id: number;\n  calendar_workout_logs: any;\n  required_preinterview: boolean;\n  required_postinterview: boolean;\n  graph_data: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class StoreService {\n\n  private localdb: Storage = window.localStorage;\n\n  // Initial state in BehaviorSubject's constructor\n  private readonly subject: BehaviorSubject<AppState>;\n\n  // Exposed observable$ store stream\n  readonly state$: Observable<AppState>;\n\n  // Getter of the last store value emitted\n  private get store(): AppState {\n    return this.subject.getValue();\n  }\n\n  // Push new state into the observable\n  private set store(val: AppState) {\n    this.subject.next(val);\n  }\n\n  private calendarFlagSubject = new Subject<any>();\n  calendarFlagObservable$ = this.calendarFlagSubject.asObservable();\n\n  public setCalendarFlag() {\n    this.calendarFlagSubject.next();\n  }\n\n  private graphDataFlagSubject = new Subject<any>();\n  graphDataFlagObservable$ = this.graphDataFlagSubject.asObservable();\n\n  public setGraphDataFlag() {\n    this.graphDataFlagSubject.next();\n  }\n\n  constructor() {\n\n    // Initialize the app state\n    this.subject = new BehaviorSubject<AppState>({\n      cur_calendar_id: null,\n      calendar_workout_logs: null,\n      required_preinterview: false,\n      required_postinterview: false,\n      graph_data: null,\n    });\n    this.state$ = this.subject.asObservable();\n  }\n\n  public setCalendarWorkoutLogs(calendar_workout_logs) {\n    console.log(\">>> set calendar workout logs: \", calendar_workout_logs);\n    this.store = { ...this.store, calendar_workout_logs: calendar_workout_logs }\n  }\n  public getCalendarWorkoutLogs() {\n    return this.store.calendar_workout_logs\n  }\n\n  public setRequiredPreinterview(required_preinterview) {\n    this.store = { ...this.store, required_preinterview: required_preinterview }\n  }\n  public getRequiredPreinterview() {\n    return this.store.required_preinterview;\n  }\n\n  public setRequiredPostinterview(required_postinterview) {\n    this.store = { ...this.store, required_postinterview: required_postinterview }\n  }\n  public getRequiredPostinterview() {\n    return this.store.required_postinterview;\n  }\n\n  public setCurCalendarId(id) {\n    this.store = { ...this.store, cur_calendar_id: id}\n  }\n  public getCurCalendarId() {\n    return this.store.cur_calendar_id;\n  }\n\n  public setGraphData(data) {\n    this.store = { ...this.store, graph_data: data}\n  }\n  public getGraphData() {\n    return this.store.graph_data;\n  }\n}\n"]}